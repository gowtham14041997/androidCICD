name: Android emulator
on:
  workflow_dispatch:
    
env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis_playstore
  API_LEVEL: 31
  ANDROID_BUILD_TOOLS_VERSION: 31.0.0
  ANDROID_SDK_PACKAGES: system-images;android-31;google_apis_playstore;x86_64 platforms;android-31 build-tools;31.0.0 platform-tools emulator
  EMULATOR_TIMEOUT: 350
  EMULATOR_NAME: nexus

jobs:
  android-emulator:
    timeout-minutes: 180
    runs-on: ubuntu-latest
    steps:
      - name: Checkout stage
        uses: actions/checkout@v3
          
      - name: Copy APK from S3 bucket
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://rpk-mobileapp-apk/CustomerApp-staging-11.8.34.apk
          destination: ./CustomerApp-staging-11.8.34.apk
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-south-1
          
      - name: Add avdmanager and sdkmanager to system PATH
        run: |
            echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: Install SDK
        run: |
           yes Y | sdkmanager --licenses
           sdkmanager --install ${ANDROID_SDK_PACKAGES}
           
      - name: Enable KVM virtualization
        run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm
            
      - name: Build emulator
        run: |
            echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"

      - name: Launch emulator
        run: |
          chmod +x ./start_emu_headless.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./start_emu_headless.sh

      - name: Install APK on emulator
        run: |
          adb devices
          adb -s emulator-5554 install CustomerApp-staging-11.8.34.apk

      - name: Copy Rupeek maven repository
        run: |
          mkdir -p ~/.m2/repository
          cp -r maven/rupeek ~/.m2/repository/
          
      - name: Install appium, uiautomator2, chromedriver
        run: |
          npm install -g appium@2.5.1
          appium driver install uiautomator2
          wget https://chromedriver.storage.googleapis.com/91.0.4472.101/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /home/runner/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-chromedriver/chromedriver/linux/chromedriver-linux64_v91.0.4472.101
          sudo chown runner:runner /home/runner/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-chromedriver/chromedriver/linux/chromedriver-linux64_v91.0.4472.101
          sudo chmod +x /home/runner/.appium/node_modules/appium-uiautomator2-driver/node_modules/appium-chromedriver/chromedriver/linux/chromedriver-linux64_v91.0.4472.101         

      - name: Run test cases
        run: |
          cd MobileAppTestAutomation
          mvn clean install 2>&1 | tee "mobileapptest_$(date +%d%m%Y).log" 2>&1
          ls -lrth
          pwd
          
      - name: Copy mobileapptest output to S3 bucket
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: ./MobileAppTestAutomation/*.log
          destination: s3://rpk-mobileapp-apk/logs/
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-south-1          
